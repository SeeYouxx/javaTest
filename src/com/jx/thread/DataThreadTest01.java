package com.jx.thread;

/**
 * @program: java
 * @description:       以后在开发中，项目都是运行在服务器中，而服务器已经将线程的定义，线程对象的创建，线程的启动等
 *                  都已经实现完了，这些都不需要编写
 *                     主要关注安全问题
 *
 *
 *                  发生线程安全问题：
 *                       1.多线程并发
 *                       2.有共享数据
 *                       3.共享数据有修改的行为
 *
 *                       当多线程并发的环境下,有共享数据,并且这个数据还会被修改,此时就存在线程安全问题,
 *                                线程排队执行(不能并发)
 *                                用排队执行解决线程安全问题
 *                                这种机制被称为:线程同步机制
 *
 *                   专业术语:线程同步,实际上就是不能并发了,线程必须排队执行
 *
 *                   线程同步就是线程排队,线程排队就会牺牲一部分效率,没办法,数据安全第一位,只有数据安全了
 *                                我们才可以谈效率
 *
 *
 *                  异步编程模型:
 *                       线程t1和线程t2 ,各自执行各自的, t1不管t2  t2不管t1
 *                       谁也不需要等谁, 这种编程模型叫做: 异步编程模型
 *                       其实就是:多线程并发(效率较高)
 *
 *                  同步编程模型:
 *                        线程t1和线程t2,在线程t1执行的时候,必须等待t2线程执行结束,或者说在t2线程执行的时候,
 *                        必须等待t1线程执行结束.两个线程之间发生了等待关系, 这就是同步编程模型
 *                        效率较低,编程排队执行
 *
 *                        同步就是排队
 *
 *
 *
 *
 *
 *
 *
 * @author:
 * @create: 2020-11-25 10:39
 */
public class DataThreadTest01 {
}